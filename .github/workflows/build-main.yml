name: Build and Push

on:
  create:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_push:
    name: Build and Push
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2

    - name: install podman
      run: sudo apt-get -y install podman buildah jq curl

    - uses: redhat-actions/podman-login@v1.4
      with:
        username: ${{ secrets.QUAY_ROBOT_NAME }}
        password: ${{ secrets.QUAY_ROBOT_PASSWORD }}
        registry: quay.io

#    - run: sudo podman run --net=host --rm --privileged ghcr.io/nalind/fedora-qemu-user-static register
    - run: sudo podman run --net=host --rm --privileged multiarch/qemu-user-static register

#    - uses: redhat-actions/buildah-build@v2
#      with:
#        containerfiles: Dockerfile
#        context: .
#        image: localhost/nonce
#        extra-args: --all-platforms --manifest localhost/doge-image

    - run: buildah version

    - run: echo FEDORARELEASE=`curl -q https://endoflife.date/api/fedora.json | jq -r '.[0].latest'` >> ${GITHUB_ENV}

    - run: buildah build --layers --net=host --manifest localhost/doge-image --platform linux/arm64,linux/amd64,linux/ppc64le,linux/s390x --build-arg FEDORARELEASE=${FEDORARELEASE:-latest} .

    - run: if test "${GITHUB_EVENT_NAME}" = create -a "${GITHUB_REF_TYPE}" = tag ; then echo PUSH_TAG="${GITHUB_REF_NAME}" >> ${GITHUB_ENV} ; fi

    - run: if test "${PUSH_TAG}" = "" ; then echo -n PUSH_TAG= >> ${GITHUB_ENV} ; podman run --quiet --rm localhost/doge-image rpm -q --qf '%{version}-%{release}' doge >> ${GITHUB_ENV} ; fi

    - run: podman manifest push --all --format v2s2 localhost/doge-image quay.io/nalind/doge-image:"${PUSH_TAG:-latest}"

    - run: podman manifest push --all --format v2s2 localhost/doge-image quay.io/nalind/doge-image:latest
